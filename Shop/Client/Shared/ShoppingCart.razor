@using Shop.Client.Models;
@using Shop.Client.HttpClients;
@using Shop.Client.Services;
@inject ShopHttpClient ShopHttpClient
@inject AppStateService AppStateService
@inject CartService CartService
@inject NavigationManager NavigationManager
@implements IDisposable


<a @onclick="NavigateToShoppingCartSummary" class="shopping-cart-link">
    <img src="images/shoppingCart.png" class="shopping-cart-image" />
</a>
<div class="shopping-cart-price-and-quantity">
    Quantity: @TotalQuantity
    <br />
    Price: @TotalPrice EUR
</div>


@code {
    public int TotalQuantity = 0;
    public decimal TotalPrice = 0;

    protected override async Task OnInitializedAsync()
    {
        var cart = await CartService.GetShoppingCartAsync();
        TotalQuantity = cart.TotalQuantity;
        TotalPrice = cart.TotalPrice;
    }

    protected override void OnInitialized()
    {
        AppStateService.OnChange += ShoppingCartHasChanged;
    }

    private void NavigateToShoppingCartSummary()
    {
        NavigationManager.NavigateTo($"/ShoppingCartSummary");
    }

    private void ShoppingCartHasChanged()
    {
        TotalQuantity = AppStateService.TotalCartItemsQuantity;
        TotalPrice = AppStateService.TotalCartItemsPrice;

        StateHasChanged(); 
    }

    public void Dispose()
    {
        AppStateService.OnChange -= ShoppingCartHasChanged;
    }
}
