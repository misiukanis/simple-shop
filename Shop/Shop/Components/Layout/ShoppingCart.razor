@using Shop.Models;
@using Shop.HttpClients;
@using Shop.Services;
@inject ShopHttpClient ShopHttpClient
@inject AppStateService AppStateService
@inject CartService CartService
@inject NavigationManager NavigationManager
@implements IDisposable


<a @onclick="NavigateToShoppingCartSummary" class="shopping-cart-link">
    <img src="images/shoppingCart.png" class="shopping-cart-image" alt="Shopping Cart" />
</a>
<div class="shopping-cart-details">
    <span class="shopping-cart-quantity">Quantity: @TotalQuantity</span>
    <span class="shopping-cart-price">Price: @TotalPrice EUR</span>
</div>


@code {
    public int TotalQuantity = 0;
    public decimal TotalPrice = 0;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender) 
        {
            var cart = await CartService.GetShoppingCartAsync();
            TotalQuantity = cart.TotalQuantity;
            TotalPrice = cart.TotalPrice;

            StateHasChanged();
        }
    }

    protected override void OnInitialized()
    {
        AppStateService.OnChange += ShoppingCartHasChanged;
    }

    private void NavigateToShoppingCartSummary()
    {
        NavigationManager.NavigateTo($"/ShoppingCartSummary");
    }

    private void ShoppingCartHasChanged()
    {
        TotalQuantity = AppStateService.TotalCartItemsQuantity;
        TotalPrice = AppStateService.TotalCartItemsPrice;

        StateHasChanged();
    }

    public void Dispose()
    {
        AppStateService.OnChange -= ShoppingCartHasChanged;
    }
}
